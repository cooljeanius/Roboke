#textdomain wesnoth-Roboke

#define FIREEVENT X
    [fire_event]
        name={X}
    [/fire_event]
#enddef

#define HIDE_ID ID
    [hide_unit]
        id={ID}
    [/hide_unit]
#enddef

#define UNHIDE_ID ID
    [unhide_unit]
        id={ID}
    [/unhide_unit]
#enddef

#define RECALL_ID ID
    [recall]
        id={ID}
    [/recall]
#enddef

#define MSG FILTER MESSAGE
    [message]
        {FILTER}
        message={MESSAGE}
    [/message]
#enddef

#define FULL_RECOVERY SUF
    {FULL_HEAL {SUF}}
    {MODIFY_UNIT {SUF} status.poisoned no}
    {MODIFY_UNIT {SUF} status.slowed no}
    #{CLEAR_VARIABLE {UNIT}.status.poisoned}
    [store_unit]
        variable=tmp
        kill=no
        [filter]
            {SUF}
        [/filter]
    [/store_unit]
    {MODIFY_UNIT {SUF} moves $tmp.max_moves}
    {CLEAR_VARIABLE tmp}
#enddef

#define ENDLEVEL_STORY
    [endlevel]
        result=victory
        linger_mode=no
        replay_save=no
        carryover_report=no
        #bonus=no
        #carryover_report=no
        #carryover_percentage=0
        #carryover_add=false
    [/endlevel]
#enddef

#define ENDLEVEL_DEFAULT_VICTORY
    [endlevel]
        result=victory
        {NEW_GOLD_CARRYOVER 40}
    [/endlevel]
#enddef

#define ENDLEVEL_VICTORY_WML WML
    [endlevel]
        result=victory
        {NEW_GOLD_CARRYOVER 40}
        {WML}
    [/endlevel]
#enddef

#define ENFORCE_GENDER_FLT FLT G
    [event]
        name=prerecruit
        first_time_only=no
        [filter]
            {FLT}
        [/filter]
        {VARIABLE unit.gender {G}}
    [/event]
#enddef

#define ENFORCE_GENDER S G
    {ENFORCE_GENDER_FLT (side={S}) {G}}
#enddef

#define MYDELAY TME
    [delay]
        time={TME}
    [/delay]
#enddef

#define MOD_TER X Y L
    [terrain]
        x={X}
        y={Y}
        terrain={L}
    [/terrain]
#enddef

#define MYFLOOD X Y
    {MOD_TER {X} {Y} Wo}
    [redraw][/redraw]
    [delay]
        time=50
    [/delay]
#enddef

#define MYDRAUGHT X Y TC
    {MOD_TER {X} {Y} {TC}}
    [redraw][/redraw]
    [delay]
        time=250
    [/delay]
#enddef

#define STORE_UNIT ID VAR
    [store_unit]
        variable={VAR}
        kill=yes
        [filter]
            id={ID}
        [/filter]
    [/store_unit]
#enddef

#define GRAB_UNIT ID VAR
    [store_unit]
        variable={VAR}
        kill=no
        [filter]
            id={ID}
        [/filter]
    [/store_unit]
#enddef

#define RECALL_WHEN_GONE ID
    {IFCOND (
        [not][have_unit]
            id={ID}
        [/have_unit] [/not]
    ) (
        [recall]
            id={ID}
        [/recall]
    )}
#enddef

#define ENDLEVEL_GRAB ID VAR
    [if]
        [have_unit]
            id={ID}
        [/have_unit]
        [then]
            #{MSG speaker=narrator _"You shall not cheat! (id '{ID}' is still on the map; fixed.)"}
            {GRAB_UNIT {ID} {VAR}}
        [/then]
    [/if]
#enddef

#define ENDLEVEL_STORE ID VAR
    [if]
        [have_unit]
            id={ID}
        [/have_unit]
        [then]
            {STORE_UNIT {ID} {VAR}}
        [/then]
    [/if]
#enddef

#define SCATTER_UNITS_MAI NUMBER TYPES PADDING_RADIUS FILTER UNIT_WML ACTION_WML
    # based on SCATTER_UNITS but allows to specify action wml and randomizes type
    [store_locations]
        {FILTER}
        variable=possible_unit_locations
    [/store_locations]

    [set_variables]
        name=unit_type_table
        [split]
            list={TYPES}
            key=type
            separator=,
        [/split]
    [/set_variables]

    {VARIABLE units_to_place {NUMBER}}
    [while]
        [variable]
            name=units_to_place
            greater_than=0
        [/variable]
        [do]
            [set_variable]
                name=random_subscript
                rand=1..$possible_unit_locations.length
            [/set_variable]
            {VARIABLE_OP random_subscript sub 1}

            [set_variable]
                name=unit_type_rand
                rand=1..$unit_type_table.length
            [/set_variable]
            {VARIABLE_OP unit_type_rand sub 1}

            [unit]
                type=$unit_type_table[$unit_type_rand].type
                x,y=$possible_unit_locations[$random_subscript].x,$possible_unit_locations[$random_subscript].y
                {UNIT_WML}
                {DEBUG_MSG "SCX $id"}
                {VARIABLE unitid $id}
            [/unit]

            [store_unit]
                variable=u
                kill=no
                [filter]
                    x,y=$possible_unit_locations[$random_subscript].x,$possible_unit_locations[$random_subscript].y
                [/filter]
            [/store_unit]

            {ACTION_WML}

            {CLEAR_VARIABLE u}

            [store_locations]
                find_in=possible_unit_locations
                [not]
                    x,y=$possible_unit_locations[$random_subscript].x,$possible_unit_locations[$random_subscript].y
                    radius={PADDING_RADIUS}
                [/not]
                variable=possible_unit_locations
            [/store_locations]

            [if]
                [variable]
                    name=possible_unit_locations.length
                    less_than=1
                [/variable]

                [then]
                    {VARIABLE units_to_place 0}
                [/then]
            [/if]

            {VARIABLE_OP units_to_place sub 1}
        [/do]
    [/while]

    {CLEAR_VARIABLE unit_type_table,unit_type_rand,possible_unit_locations,random_subscript,units_to_place}
#enddef

# vim:ts=2 sw=2 et:
